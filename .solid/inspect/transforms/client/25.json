{
  "id": "/project/Tuxedo-Cupcakes/node_modules/.pnpm/solid-start@0.2.5_qx3wzgkguxvthvssnutneqxbxi/node_modules/solid-start/root/Links.tsx?v=5c95b2a1",
  "deps": [],
  "plugins": [
    "__load__",
    "solid",
    "vite:import-analysis"
  ],
  "transforms": [
    {
      "name": "__load__",
      "result": "import { JSXElement, useContext } from \"solid-js\";\nimport { useAssets } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { ManifestEntry, PageEvent } from \"../server/types\";\nimport { routeLayouts } from \"./InlineStyles\";\n\nfunction flattenIslands(match, manifest) {\n  let result = [...match];\n  match.forEach(m => {\n    if (m.type !== \"island\") return;\n    const islandManifest = manifest[m.href];\n    if (islandManifest) {\n      const res = flattenIslands(islandManifest.assets, manifest);\n      result.push(...res);\n    }\n  });\n  return result;\n}\n\nfunction getAssetsFromManifest(\n  manifest: PageEvent[\"env\"][\"manifest\"],\n  routerContext: PageEvent[\"routerContext\"]\n) {\n  let match = routerContext.matches.reduce<ManifestEntry[]>((memo, m) => {\n    if (m.length) {\n      const fullPath = m.reduce((previous, match) => previous + match.originalPath, \"\");\n      const route = routeLayouts[fullPath];\n      if (route) {\n        memo.push(...((manifest[route.id] || []) as ManifestEntry[]));\n        const layoutsManifestEntries = route.layouts.flatMap(\n          manifestKey => (manifest[manifestKey] || []) as ManifestEntry[]\n        );\n        memo.push(...layoutsManifestEntries);\n      }\n    }\n    return memo;\n  }, []);\n\n  match.push(...((manifest[\"entry-client\"] || []) as ManifestEntry[]));\n\n  match = flattenIslands(match, manifest);\n\n  const links = match.reduce((r, src) => {\n    r[src.href] =\n      src.type === \"style\" ? (\n        <link rel=\"stylesheet\" href={src.href} $ServerOnly />\n      ) : src.type === \"script\" ? (\n        <link rel=\"modulepreload\" href={src.href} $ServerOnly />\n      ) : undefined;\n    return r;\n  }, {} as Record<string, JSXElement>);\n\n  return Object.values(links);\n}\n\n/**\n * Links are used to load assets for the server rendered HTML\n * @returns {JSXElement}\n */\nexport default function Links() {\n  const isDev = import.meta.env.MODE === \"development\";\n  const context = useContext(ServerContext);\n  !isDev &&\n    import.meta.env.START_SSR &&\n    useAssets(() => getAssetsFromManifest(context.env.manifest, context.routerContext));\n  return null;\n}\n",
      "start": 1681505637961,
      "end": 1681505637961
    },
    {
      "name": "solid",
      "result": "import { setAttribute as _$setAttribute } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { useContext } from \"solid-js\";\nimport { useAssets } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { routeLayouts } from \"./InlineStyles\";\nfunction flattenIslands(match, manifest) {\n  let result = [...match];\n  match.forEach(m => {\n    if (m.type !== \"island\") return;\n    const islandManifest = manifest[m.href];\n    if (islandManifest) {\n      const res = flattenIslands(islandManifest.assets, manifest);\n      result.push(...res);\n    }\n  });\n  return result;\n}\nfunction getAssetsFromManifest(manifest, routerContext) {\n  let match = routerContext.matches.reduce((memo, m) => {\n    if (m.length) {\n      const fullPath = m.reduce((previous, match) => previous + match.originalPath, \"\");\n      const route = routeLayouts[fullPath];\n      if (route) {\n        memo.push(...(manifest[route.id] || []));\n        const layoutsManifestEntries = route.layouts.flatMap(manifestKey => manifest[manifestKey] || []);\n        memo.push(...layoutsManifestEntries);\n      }\n    }\n    return memo;\n  }, []);\n  match.push(...(manifest[\"entry-client\"] || []));\n  match = flattenIslands(match, manifest);\n  const links = match.reduce((r, src) => {\n    r[src.href] = src.type === \"style\" ? (() => {\n      const _el$ = _$getNextElement();\n      _$effect(() => _$setAttribute(_el$, \"href\", src.href));\n      return _el$;\n    })() : src.type === \"script\" ? (() => {\n      const _el$2 = _$getNextElement();\n      _$effect(() => _$setAttribute(_el$2, \"href\", src.href));\n      return _el$2;\n    })() : undefined;\n    return r;\n  }, {});\n  return Object.values(links);\n}\n\n/**\n * Links are used to load assets for the server rendered HTML\n * @returns {JSXElement}\n */\nexport default function Links() {\n  const isDev = import.meta.env.MODE === \"development\";\n  const context = useContext(ServerContext);\n  !isDev && import.meta.env.START_SSR && useAssets(() => getAssetsFromManifest(context.env.manifest, context.routerContext));\n  return null;\n}",
      "start": 1681505637961,
      "end": 1681505637970
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":false};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/project/Tuxedo-Cupcakes/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/project/Tuxedo-Cupcakes/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"solid-start-vercel\";import { setAttribute as _$setAttribute } from \"/node_modules/.vite/deps/solid-js_web.js?v=6ed96d96\";\nimport { effect as _$effect } from \"/node_modules/.vite/deps/solid-js_web.js?v=6ed96d96\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=6ed96d96\";\nimport { useContext } from \"/node_modules/.vite/deps/solid-js.js?v=6ed96d96\";\nimport { useAssets } from \"/node_modules/.vite/deps/solid-js_web.js?v=6ed96d96\";\nimport { ServerContext } from \"/node_modules/.pnpm/solid-start@0.2.5_qx3wzgkguxvthvssnutneqxbxi/node_modules/solid-start/server/ServerContext.tsx?v=5c95b2a1\";\nimport { routeLayouts } from \"/node_modules/.pnpm/solid-start@0.2.5_qx3wzgkguxvthvssnutneqxbxi/node_modules/solid-start/root/InlineStyles.tsx?v=5c95b2a1\";\nfunction flattenIslands(match, manifest) {\n  let result = [...match];\n  match.forEach(m => {\n    if (m.type !== \"island\") return;\n    const islandManifest = manifest[m.href];\n    if (islandManifest) {\n      const res = flattenIslands(islandManifest.assets, manifest);\n      result.push(...res);\n    }\n  });\n  return result;\n}\nfunction getAssetsFromManifest(manifest, routerContext) {\n  let match = routerContext.matches.reduce((memo, m) => {\n    if (m.length) {\n      const fullPath = m.reduce((previous, match) => previous + match.originalPath, \"\");\n      const route = routeLayouts[fullPath];\n      if (route) {\n        memo.push(...(manifest[route.id] || []));\n        const layoutsManifestEntries = route.layouts.flatMap(manifestKey => manifest[manifestKey] || []);\n        memo.push(...layoutsManifestEntries);\n      }\n    }\n    return memo;\n  }, []);\n  match.push(...(manifest[\"entry-client\"] || []));\n  match = flattenIslands(match, manifest);\n  const links = match.reduce((r, src) => {\n    r[src.href] = src.type === \"style\" ? (() => {\n      const _el$ = _$getNextElement();\n      _$effect(() => _$setAttribute(_el$, \"href\", src.href));\n      return _el$;\n    })() : src.type === \"script\" ? (() => {\n      const _el$2 = _$getNextElement();\n      _$effect(() => _$setAttribute(_el$2, \"href\", src.href));\n      return _el$2;\n    })() : undefined;\n    return r;\n  }, {});\n  return Object.values(links);\n}\n\n/**\n * Links are used to load assets for the server rendered HTML\n * @returns {JSXElement}\n */\nexport default function Links() {\n  const isDev = import.meta.env.MODE === \"development\";\n  const context = useContext(ServerContext);\n  !isDev && import.meta.env.START_SSR && useAssets(() => getAssetsFromManifest(context.env.manifest, context.routerContext));\n  return null;\n}",
      "start": 1681505637970,
      "end": 1681505637971
    }
  ],
  "virtual": false
}