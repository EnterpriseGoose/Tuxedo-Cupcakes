@use "../../global-styles/variables.scss" as *;

.order {
	padding-top: calc(5 * $ru);
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
}

.explainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;

	p {
		width: calc(80 * $swru);
	}

	button {
		padding: calc(1 * $tru) calc(3 * $tru);

		&:disabled {
			filter: brightness(1);
			background-color: lightgray;
			border-radius: calc(0 * $ru);
			cursor: not-allowed;
		}
	}
}

.orderPage {
	scroll-behavior: smooth;
	width: 100vw;
	height: 100vh;
	background-color: white;
	position: absolute;
	bottom: -100vh;
	transition: bottom 1000ms cubic-bezier(0.65, 0.05, 0.36, 1);
	display: flex;
	flex-direction: column;

	&.up {
		bottom: 0;
	}

	.closeOrderPage {
		position: relative;
		background-color: $cyan;
		border: none;
		cursor: pointer;
		width: 100%;
		margin: 0;
		padding: calc(0.3 * $tru) 0 calc(0.3 * $tru) 0;
		margin-bottom: calc(0.5 * $ru);
		user-select: none;

		img {
			transform: rotate(90deg);
			height: calc(2 * $tru);
		}

		// @media only screen and ((hover: none) or (pointer: coarse)) {
		// 	padding-top: 8vh;
		// }
	}

	.orderPageContent {
		position: relative;
		width: 100%;
		height: 100%;
	}
}

.nextPage {
	position: fixed;
	bottom: 0;
	transition: bottom 1s ease-in-out;
	&.down {
		bottom: -10vh;
	}
	padding-bottom: 1vh;
	padding-top: 1vh;
	width: 100%;
	margin-top: auto;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;

	background-color: $cyan;

	button {
		background-color: white;

		&:disabled {
			background-color: rgb(189, 189, 189);
		}
	}

	img {
		margin-left: 10px;
		width: 1em;
	}

	.back {
		img {
			margin-left: 0;
			margin-right: 10px;
			width: 1em;
			rotate: 180deg;
		}
	}
}

.nextButton {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	width: 12.5vw;
	flex-shrink: 0;
	user-select: none;

	p {
		margin: calc(2 * $ru);
	}

	button {
		display: flex;
		justify-content: center;
		align-items: center;
		padding: calc(0.25 * $tru);
		border-radius: 100%;
		border: none;
		background: $yellow-orange;
		cursor: pointer;
		transition: all 0.3s ease-in-out;

		img {
			background-color: white;
			width: calc(4 * $tru);
			height: calc(4 * $tru);
			padding: calc(1 * $tru);
			border-radius: 100%;
			rotate: 0deg;
			transition:
				background-color ease-in-out 200ms,
				rotate ease-in-out 0.5s;

			&:hover {
				background-color: transparent;
			}

			&.flipped {
				rotate: 180deg;
			}
		}

		&:disabled {
			cursor: not-allowed;
			filter: grayscale(100%);

			img {
				opacity: 50%;
			}
		}
	}
}

.pageBox {
	transition: all 1.5s cubic-bezier(0.65, 0.05, 0.36, 1);
	scroll-behavior: smooth;
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0;
	bottom: 0;
	overflow-x: hidden;
	overflow-y: auto;
	display: flex;
	flex-direction: column;

	&.left {
		left: -100%;
	}

	&.active {
		left: 0;
	}

	&.right {
		left: 100%;
	}

	> :nth-last-child(2)::after {
		position: relative;
		content: "";
		height: calc(15 * $tru);
		width: 100%;
		flex-shrink: 0;
	}
}

.marketChoice {
	.marketGrid {
		display: flex;
		position: absolute;
		flex-direction: row;
		flex-wrap: nowrap;
		left: 15vw;
		transition: left ease-in-out 0.5s;

		.marketGroup {
			display: flex;
			flex-direction: column;
			align-items: center;
			width: 70vw;
			height: 70vh;
			background-color: $cyan;
			text-align: left;
			border-radius: 3vw;

			h3 {
				margin-bottom: 0;
				margin-top: calc(2 * $ru);
			}

			.divider {
				display: flex;
				flex-direction: row;
				justify-content: center;
				column-gap: calc(5 * $wru);

				@media (max-width: 1600px) {
					flex-direction: column;

					.flavors {
						p {
							columns: 2;

							b.gap {
								display: none;
							}
						}
					}
				}

				.names {
					display: flex;
					flex-direction: column;
					margin-top: calc(3 * $ru);

					.button {
						text-align: left;
						background-color: rgba(255, 255, 255, 0.33);
						border: none;
						padding: calc(1 * $tru) calc(2 * $tru);
						width: fit-content;
						border-radius: calc(1.5 * $tru);
						transition: all ease-in-out 200ms;
						cursor: pointer;
						font-size: calc(0.5 * $tru + 2.5 * $ru);

						span {
							display: inline-block;
							padding-left: calc(10 * $tru);
						}

						&:hover {
							background-color: rgba(255, 255, 255, 0.5);
						}

						&:focus {
							background-color: rgba(255, 255, 255, 0.7);
						}

						&.selected {
							outline: rgba(255, 255, 255, 1) solid 3px;
							background-color: rgba(255, 255, 255, 0.5);
						}
					}
				}

				.flavors {
					margin-top: calc(3 * $ru);

					h3 {
						margin-top: 0;
					}

					p {
						font-size: calc(0.5 * $tru + 2.5 * $ru);
					}
				}
			}
		}
	}
}

.cupcakeChoice {
	h2 {
		margin-bottom: calc(1 * $ru);
	}

	.stepGridBox {
		display: flex;
		flex-direction: column;
	}

	.stepGrid {
		display: flex;
		position: relative;
		flex-direction: row;
		flex-wrap: nowrap;
		// left: 15vw;
		transition: left ease-in-out 0.5s;
		//gap: 5vw;
		//min-height: 100%;

		.step {
			display: flex;
			flex-direction: column;
			align-items: center;
			width: 70vw;
			flex-shrink: 0;
			//height: 75vh;
		}
	}

	.boxChoice {
		display: flex;
		flex-direction: column;
		align-items: center;
		height: auto;

		.boxGrid {
			width: fit-content;
			display: grid;
			grid: auto-flow / repeat(7, 1fr);
			align-content: center;
			justify-content: center;
			align-items: center;

			.boxSelect {
				display: flex;
				align-items: center;
				justify-content: center;

				&:hover {
					filter: brightness(95%);
				}

				&:active {
					filter: brightness(90%);
				}
			}

			@media (max-width: 900px) {
				grid: auto-flow / repeat(5, 1fr);
			}
			@media (max-width: 650px) {
				grid: auto-flow / repeat(3, 1fr);
				.boxSelect {
					align-items: flex-start;
					justify-content: flex-start;
				}

				svg {
					width: 90%;
					height: auto;
				}
			}
		}
	}

	.flavorChoice {
		.divider {
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			gap: calc(15 * $wru - 100px);

			.boxInfo {
				h3 {
					margin-bottom: 0;
				}
				h4 {
					font-size: calc(2 * $tru);
				}

				svg {
					height: auto;

					@media (max-width: 1100px) {
						width: 80%;
					}
				}
			}

			.palette {
				display: flex;
				flex-direction: column;
				gap: calc(2 * $ru);

				h3 {
					margin-bottom: 0;
					margin-top: calc(2 * $ru);
				}

				.brushSelect {
					display: grid;
					grid-template-columns: repeat(3, 1fr);
					gap: calc(1 * $ru);

					.cupcake {
						display: flex;
						justify-content: center;
						align-items: center;
						width: min-content;
						height: min-content;
						cursor: pointer;
						border-radius: 100%;
						padding: 0;

						&:hover {
							filter: brightness(0.95);
						}

						&:active {
							filter: brightness(0.9);
						}

						&.selected {
							&::before {
								content: "";
								position: absolute;
								width: 105%;
								height: 105%;
								background-image: $orange-red;
								border-radius: 100%;
								z-index: -1;
							}
						}

						.svg {
							width: calc(10 * $swru);
							height: auto;

							@media (max-width: 600px) {
								width: calc(15 * $swru);
							}
						}
					}

					@media only screen and ((hover: none) or (pointer: coarse)) {
						grid-template-columns: 2fr 5fr;
						align-items: center;
						column-gap: calc(2 * $wru);

						div {
							user-select: none;
							justify-self: flex-start;
							text-align: left;
						}

						.cupcake {
							justify-self: flex-end;
						}
					}
				}

				.buttons {
					display: flex;
					flex-direction: row;
					width: 100%;
					justify-content: center;
					gap: calc(4 * $ru);
					margin-bottom: calc(2 * $wru);
				}
			}

			@media (max-width: 1000px) {
				flex-direction: column;
			}
		}
	}

	.cart {
		display: flex;
		flex-direction: column;
		align-items: center;

		.cartGrid {
			width: 100%;
			max-height: 55vh;
			display: grid;
			grid-template-columns: 1.5fr 2px 1fr 2px 1.5fr 2px 1fr;
			justify-content: center;
			align-items: center;
			margin: calc(2 * $ru) 0;
			overflow-y: auto;
			row-gap: calc(2 * $ru);
			column-gap: calc(1 * $ru);

			@media (max-width: 1100px) {
				.cupcakeBox svg {
					width: 90%;
					height: 90%;
				}

				.boxInfo {
					width: min-content;
					justify-self: center;
				}
			}

			@media (max-width: 700px) {
				grid-template-columns: 1fr 2px 1fr;
			}

			.divider {
				background-color: #000000;
				width: 100%;
				height: 50%;
			}

			.horizontalDivider {
				grid-column: auto / span 3;
				width: 90%;
				justify-self: center;
				height: 2px;
				background-color: black;
			}

			.flavors {
				white-space: pre-wrap;
			}

			.buttons {
				display: flex;
				flex-wrap: wrap;
				justify-content: center;

				button {
					margin: calc(0.5 * $ru);
					display: flex;
					align-items: center;
					justify-content: center;

					width: calc(3 * $tru);
					height: calc(3 * $tru);

					svg {
						width: calc(2 * $tru);
						height: calc(2 * $tru);
					}
				}
			}
		}

		.addBox {
			width: 50%;
			margin-bottom: calc(2 * $wru);
		}
	}
}

.extraDetails {
	display: flex;
	flex-direction: column;
	align-items: center;

	.detailsGrid {
		position: relative;
		display: grid;
		align-items: center;
		width: max-content;
		grid-template-columns: 1fr 3fr;
		grid-template-rows: repeat(4, calc(6.5 * $tru)) calc(10 * $tru) repeat(2, calc(6.5 * $tru));
		grid-template-areas:
			"nameLabel name"
			"emailLabel email"
			"phoneLabel phone"
			"toAdd toAdd"
			"toAdd toAdd"
			"newsletter newsletter"
			"saveDetails saveDetails";

		font-size: calc(2.4 * $tru);

		margin-bottom: calc(2 * $ru);

		@media (max-width: 1000px) {
			grid-template-rows: repeat(4, calc(6.5 * $tru)) calc(15 * $tru) repeat(2, calc(6.5 * $tru));
		}

		.textInput {
			//margin-left: calc(3 * $ru);

			input {
				all: unset;
				border: none;
				border-bottom: 2px solid black;
				background-color: #f7f7f7;
				padding: 10px;
				transition: all 300ms ease-in-out;
				width: calc(100% - 20px);
				max-width: 17em;
				text-align: left;
				margin: 10px 0;

				font-size: calc(2 * $tru);

				@media (max-width: 1000px) {
					font-size: calc(2.5 * $tru);
				}

				&:invalid,
				&[valid="false"] {
					border-bottom: 2px solid red;
				}
				&:focus {
					border-bottom: 2px solid $cyan;
				}
			}
		}

		label {
			font-size: calc(2.4 * $tru);

			b {
				color: rgb(192, 29, 29);
			}
		}

		.toAdd {
			grid-area: toAdd;
			display: flex;
			flex-direction: column;

			height: 80%;

			textarea {
				resize: none;
				height: 100%;
				//all: unset;
				border: none;
				border-bottom: 2px solid black;
				background-color: #f7f7f7;
				padding: 10px;
				transition: all 100ms ease-in-out;
				text-align: left;

				font-size: calc(2 * $tru);

				&:focus {
					outline: none;
					border-bottom: 2px solid $cyan;
				}

				@media (max-width: 1000px) {
					font-size: calc(2.5 * $tru);
				}
			}
		}

		.newsletter {
			grid-area: newsletter;
		}
		.saveDetails {
			grid-area: saveDetails;

			label {
				margin-left: auto;
			}
		}

		.newsletter,
		.saveDetails {
			display: flex;
			flex-direction: row;
			text-align: right;

			input {
				margin-left: calc(4 * $ru);
				width: calc(2 * $tru);
				height: calc(2 * $tru);

				@media (max-width: 800px) {
					width: calc(3 * $tru);
					height: calc(3 * $tru);
				}
			}
		}
	}
}

.reviewOrder {
	.dividerBox {
		height: 100%;
		width: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: flex-start;
	}

	.divider {
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: flex-start;
		gap: calc(10 * $ru);
		height: 100%;

		.cart {
			display: flex;
			flex-direction: column;
			align-items: center;
			max-height: 72vh;
			.cartGrid {
				max-height: 100%;
				display: grid;
				grid-template-columns: 1.2fr 2px 1fr 2px 1.5fr;
				justify-content: center;
				align-items: center;
				margin: calc(2 * $ru) 0;
				overflow-y: auto;
				row-gap: calc(2 * $ru);
				column-gap: calc(1 * $ru);

				@media (max-width: 1000px) {
					.cupcakeBox svg {
						height: 90%;
						width: 90%;
					}
				}

				.divider {
					background-color: #000000;
					width: 100%;
					height: 50%;
				}

				.flavors {
					white-space: pre-wrap;
				}
			}

			.cartFooter {
				display: flex;
				gap: calc(5 * $ru);
				margin-bottom: calc(1 * $wru);
			}
		}

		.details {
			display: flex;
			flex-direction: column;
			height: 100%;

			.gap {
				margin-top: calc(5 * $ru);
			}

			.placeOrder {
				display: flex;
				flex-direction: row;
				align-items: center;
				justify-content: center;
				margin-top: auto;
				margin-bottom: auto;
				font-size: calc(3.5 * $tru);

				img {
					width: calc(3 * $tru);
					animation: spin 1s cubic-bezier(0.38, 0.52, 0.72, 0.59) infinite forwards;
					display: none;
				}
			}
		}

		@media (max-width: 1150px) {
			flex-direction: column;
			justify-content: flex-start;
			align-items: center;
		}
	}
}

@keyframes spin {
	0% {
		rotate: 0deg;
	}

	100% {
		rotate: 360deg;
	}
}
