@use "../../global-styles/variables.scss" as *;

.order {
	padding-top: calc(5 * $ru);
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
}

.explainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;

	p {
		width: calc(60 * $wru);
	}

	button {
		padding: calc(1 * $tru) calc(3 * $tru);

		&:disabled {
			filter: brightness(1);
			background-color: lightgray;
			border-radius: calc(0 * $ru);
			cursor: not-allowed;
		}
	}
}

.orderPage {
	width: 100vw;
	height: 100vh;
	background-color: white;
	position: absolute;
	bottom: -100vh;
	transition: bottom 1000ms cubic-bezier(0.65, 0.05, 0.36, 1);
	display: flex;
	flex-direction: column;

	&.up {
		bottom: 0;
	}

	.closeOrderPage {
		background-color: $cyan;
		border: none;
		cursor: pointer;
		width: 100%;
		margin: 0;
		padding: calc(0.3 * $tru) 0 calc(0.3 * $tru) 0;
		margin-bottom: calc(0.5 * $ru);

		img {
			transform: rotate(90deg);
			height: calc(2 * $tru);
		}
	}

	.orderPageContent {
		position: relative;
		width: 100%;
		height: 100%;
	}
}

.nextPage {
	position: absolute;
	bottom: 2vh;
	left: 0;
	right: 0;
	margin: 0;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;

	img {
		margin-left: 10px;
		width: 1em;
	}

	.back {
		img {
			margin-left: 0;
			margin-right: 10px;
			width: 1em;
			rotate: 180deg;
		}
	}
}

.nextButton {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 12.5vw;

	button {
		display: flex;
		justify-content: center;
		align-items: center;
		padding: calc(0.25 * $tru);
		border-radius: 100%;
		border: none;
		background: $yellow-orange;
		cursor: pointer;
		transition: all 0.3s ease-in-out;

		img {
			background-color: white;
			width: calc(4 * $tru);
			height: calc(4 * $tru);
			padding: calc(1 * $tru);
			border-radius: 100%;
			rotate: 0deg;
			transition:
				background-color ease-in-out 200ms,
				rotate ease-in-out 0.5s;

			&:hover {
				background-color: transparent;
			}

			&.flipped {
				rotate: 180deg;
			}
		}

		&:disabled {
			cursor: not-allowed;
			filter: grayscale(100%);
		}
	}
}

.pageBox {
	transition: all 1.5s cubic-bezier(0.65, 0.05, 0.36, 1);
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0;
	bottom: 0;
	overflow: hidden;

	&.left {
		transform: translateX(-100%);
	}

	&.active {
		transform: translateX(0);
	}

	&.right {
		transform: translateX(100%);
	}
}

.marketChoice {
	.marketGrid {
		display: flex;
		position: absolute;
		flex-direction: row;
		flex-wrap: nowrap;
		left: 15vw;
		transition: left ease-in-out 0.5s;

		.marketGroup {
			display: flex;
			flex-direction: column;
			align-items: center;
			width: 70vw;
			height: 70vh;
			background-color: $cyan;
			text-align: left;
			border-radius: 3vw;

			h3 {
				margin-bottom: 0;
				margin-top: calc(2 * $ru);
			}

			.divider {
				display: flex;
				flex-direction: row;
				justify-content: center;
				gap: 10vw;

				.names {
					display: flex;
					flex-direction: column;
					margin-top: calc(3 * $ru);

					.button {
						text-align: left;
						background-color: rgba(255, 255, 255, 0.33);
						border: none;
						padding: calc(1 * $tru) calc(2 * $tru);
						width: fit-content;
						border-radius: calc(1.5 * $tru);
						transition: all ease-in-out 200ms;
						cursor: pointer;

						span {
							display: inline-block;
							padding-left: calc(10 * $tru);
						}

						&:hover {
							background-color: rgba(255, 255, 255, 0.5);
						}

						&:focus {
							background-color: rgba(255, 255, 255, 0.7);
						}

						&.selected {
							outline: rgba(255, 255, 255, 1) solid 3px;
							background-color: rgba(255, 255, 255, 0.5);
						}
					}
				}

				.flavors {
					margin-top: calc(3 * $ru);
				}
			}
		}
	}
}

.cupcakeChoice {
	h2 {
		margin-bottom: calc(1 * $ru);
	}

	.stepGrid {
		display: flex;
		position: absolute;
		flex-direction: row;
		flex-wrap: nowrap;
		left: 15vw;
		transition: left ease-in-out 0.5s;

		.step {
			width: 70vw;
			height: 70vh;
		}
	}

	.boxChoice {
		display: flex;
		flex-direction: column;
		align-items: center;

		.boxGrid {
			width: fit-content;
			display: grid;
			grid: auto-flow / repeat(7, 1fr);
			align-content: center;
			justify-content: center;
			align-items: center;

			.boxSelect {
				&:hover {
					filter: brightness(95%);
				}

				&:active {
					filter: brightness(90%);
				}
			}
		}
	}

	.flavorChoice {
		.divider {
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			gap: calc(10 * $ru);

			.brushSelect {
				display: grid;
				grid-template-columns: repeat(4, 1fr);
				gap: calc(1 * $ru);

				.cupcake {
					display: flex;
					justify-content: center;
					align-items: center;
					padding: -2px;
					cursor: pointer;
					border-radius: 100%;
					padding: 0;

					&:hover {
						filter: brightness(0.95);
					}

					&:active {
						filter: brightness(0.9);
					}

					&.selected {
						&::before {
							content: "";
							position: absolute;
							width: 105%;
							height: 105%;
							background-image: $orange-red;
							border-radius: 100%;
							z-index: -1;
						}
					}
				}
			}
		}
	}
}
